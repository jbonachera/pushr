{"version":3,"sources":["dialer.ts","types.ts","RemoteSessionModal.tsx","RemoteSession.tsx","Presence.tsx","signaler.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MessageReceivedEvent","sender","data","Event","AuthorizationRequestedEvent","filename","resolve","reject","ConnectionEvent","kind","ConnectionClosedEvent","ConnectionReadyEvent","Conn","signaler","id","remoteId","conn","chan","RTCPeerConnection","iceServers","urls","ondatachannel","event","channel","onerror","err","console","error","dispatchEvent","onclose","onopen","onmessage","msg","onicecandidate","candidate","signalCandidate","createDataChannel","this","createOffer","desc","setLocalDescription","debug","sendDescription","close","Promise","success","failure","readyState","removeEventListener","addEventListener","once","addIceCandidate","setRemoteDescription","createAnswer","answer","message","send","EventTarget","Dialer","registered","conns","register","removeConn","from","offer","push","to","informOffer","undefined","find","elt","confirmOffer","Error","filter","forEach","offerCallback","idx","findIndex","splice","all","map","establishedConn","c","init","Payload","chunkNumber","chunkTotalCount","metadata","value","end","chunkSize","percentage","total","left","encodeBlob","blob","reader","FileReader","onloadend","e","result","toString","readAsDataURL","RemoteSessionModal","props","useState","setFilename","progress","setProgress","name","size","progressState","setProgressState","handleChange","files","a","length","file","useEffect","JSON","stringify","log","chunk","slice","state","requests","dialer","dial","sessionId","ready","b64","show","className","friendlyName","request","onClick","allow","deny","receivedFiles","complete","chunks","toFixed","download","href","htmlFor","icon","faUpload","type","onChange","target","RemoteSession","fileTransfertRequests","setfileTransfertRequests","modalState","setModalState","setReceivedFiles","ev","payload","parse","old","concat","no","sort","b","reduce","acc","cur","some","Presence","sessions","setSessions","session","localeCompare","SessionEvent","SessionJoinedEvent","SessionLeftEvent","Signaler","mqtt","mqttPresencePrefix","fetch","connect","username","password","connectTimeout","clean","resubscribe","clientId","will","retain","qos","topic","on","startsWith","tokens","split","input","descriptionCallback","then","resp","publish","catch","warn","topics","subscribe","v","capitalizeFirstLetter","first","rest","locale","navigator","language","toLocaleUpperCase","join","pick","array","Math","floor","random","Array","adjectives","names","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gVAGaA,EAAb,kDACE,WAAmBC,EAAuBC,GAAe,IAAD,8BACtD,cAAM,qBADWD,SAAqC,EAAdC,OAAc,EAD1D,sBAA0CC,QAM7BC,EAAb,kDACE,WAAmBH,EAAuBI,EAAyBC,EAA0BC,GAAmB,IAAD,8BAC7G,cAAM,4BADWN,SAA4F,EAArEI,WAAqE,EAA5CC,UAA4C,EAAlBC,SAAkB,EADjH,sBAAiDJ,QAMpCK,EAAb,kDACE,WAAYC,GAAe,4DACLA,IAFxB,sBAAqCN,QAMxBO,EAAb,kDACE,aAAe,uCACP,UAFV,UAA2CF,GAK9BG,EAAb,kDACE,aAAe,uCACP,SAFV,UAA0CH,GAO7BI,EAAb,kDAGE,WAAoBC,EAA4BC,EAAoBC,EAAyBV,GAAmB,IAAD,uBAC7G,gBADkBQ,WAA2F,EAA/DC,KAA+D,EAA3CC,WAA2C,EAAlBV,WAAkB,EAFvGW,UAEuG,IADvGC,UACuG,EAE7G,EAAKJ,SAAWA,EAChB,EAAKC,GAAKA,EACV,EAAKT,SAAWA,EAChB,EAAKU,SAAWA,EAL6F,OAc7G,EAAKC,KAAO,IAAIE,kBAPN,CACNC,WAAY,CACV,CAAEC,KAAM,mCAMd,EAAKJ,KAAKK,cAAgB,SAACC,GACzBA,EAAMC,QAAQC,QAAU,SAACC,GACvBC,QAAQC,MAAMF,GACd,EAAKG,cAAc,IAAIlB,IAEzBY,EAAMC,QAAQM,QAAU,SAACJ,GACvB,EAAKG,cAAc,IAAIlB,IAEzBY,EAAMC,QAAQO,OAAS,WACrB,EAAKF,cAAc,IAAIjB,IAEzBW,EAAMC,QAAQQ,UAAY,SAACC,GACzB,EAAKJ,cAAc,IAAI5B,EAAqB,EAAKe,SAAUiB,EAAI9B,SAGnE,EAAKc,KAAKiB,eAAiB,SAACX,GACtBA,EAAMY,WACR,EAAKrB,SAASsB,gBAAgB,EAAKpB,SAAUO,EAAMY,YAGvD,EAAKjB,KAAO,EAAKD,KAAKoB,kBAAV,iCAAsDtB,EAAtD,YAA4DC,IAnCqC,EAHjH,mLA0CuBsB,KAAKrB,KAAKsB,cA1CjC,cA0CUC,EA1CV,OA2CIF,KAAKrB,KAAKwB,oBAAoBD,GAC9Bb,QAAQe,MAAMJ,KAAKtB,SAAU,uBA5CjC,kBA6CWsB,KAAKxB,SAAS6B,gBAAgBL,KAAKtB,SAAUwB,EAAMF,KAAKhC,WA7CnE,oIAgDIgC,KAAKpB,KAAK0B,QACVN,KAAKrB,KAAK2B,UAjDd,4KAoDW,IAAIC,SAAQ,SAACtC,EAASC,GAK3B,IAAIsC,EAAwBC,EAJC,SAAzB,EAAK7B,KAAK8B,YAMdF,EAAU,WAAQ,EAAKG,oBAAoB,oBAAqBF,GAAUxC,KAC1EwC,EAAU,WAAQ,EAAKE,oBAAoB,mBAAoBH,GAAUtC,KAEzEmB,QAAQe,MAAM,iDAAkD,EAAKxB,KAAK8B,YAC1E,EAAKE,iBAAiB,mBAAoBJ,EAAS,CAAEK,MAAM,IAC3D,EAAKD,iBAAiB,oBAAqBH,EAAS,CAAEI,MAAM,KAV1D5C,QAtDR,gLAoEwB4B,GApExB,oEAqEsB,OAAdA,EArER,wBAsEMR,QAAQe,MAAMJ,KAAKtB,SAAU,yBAA0BmB,GAtE7D,kBAwEcG,KAAKrB,KAAKmC,gBAAgBjB,GAxExC,uDA0EQR,QAAQC,MAAM,sCAAd,MA1ER,2LA8EoBY,GA9EpB,8EA+EIb,QAAQe,MAAMJ,KAAKtB,SAAU,8BAA+BwB,GAC5DF,KAAKrB,KAAKoC,qBAAqBb,GAhFnC,SAiFyBF,KAAKrB,KAAKqC,eAjFnC,cAiFUC,EAjFV,OAkFIjB,KAAKrB,KAAKwB,oBAAoBc,GAC9B5B,QAAQe,MAAMJ,KAAKtB,SAAU,iCAnFjC,kBAoFWuC,GApFX,2IAsFgBf,GACZF,KAAKrB,KAAKoC,qBAAqBb,GAC/Bb,QAAQe,MAAMJ,KAAKtB,SAAU,mCAxFjC,2BA0FOwC,GACH,OAAOlB,KAAKpB,KAAKuC,KAAKD,OA3F1B,eAA0BE,cAqGbC,EAAb,kDAIE,WAAoB7C,EAA4BC,GAAa,IAAD,8BAC1D,gBADkBD,WAAwC,EAAZC,KAAY,EAHpD6C,YAAa,EAGuC,EAFpDC,WAEoD,EAE1D,EAAK/C,SAAWA,EAChB,EAAK+C,MAAQ,GACb,EAAK9C,GAAKA,EAJgD,EAJ9D,uDAUc,IAAD,OACTuB,KAAKxB,SAASgD,SAASxB,MACvBA,KAAKxB,SAASoC,iBAAiB,gBAAiB,SAAC3B,GAC/C,EAAKwC,WAAWxC,EAAMR,OAExBuB,KAAKsB,YAAa,IAftB,4EAiBqBI,EAAcC,GAjBnC,qFAkBUhD,EAAO,IAAIJ,EAAKyB,KAAKxB,SAAUwB,KAAKvB,GAAIiD,EAAMC,EAAM3D,WACrD4C,iBAAiB,qBAAsB,WAC1C,EAAKa,WAAWC,MAGlB/C,EAAKiC,iBAAiB,oBAAqB,SAAC3B,GAC1C,EAAKM,cAAc,IAAI5B,EAAqBsB,EAAMrB,OAAQqB,EAAMpB,UAGlEmC,KAAKuB,MAAMK,KAAK,CAAEF,KAAMA,EAAMG,GAAI7B,KAAKvB,GAAIE,KAAMA,IA3BrD,kBA4BWA,EAAKmD,YAAYH,EAAMzB,OA5BlC,oLA8BoBwB,EAAcC,GA9BlC,oFAgC4BI,IADF/B,KAAKuB,MAAMS,MAAK,SAAAC,GAAG,OAAIA,EAAIP,OAASA,GAAQO,EAAItD,KAAKX,WAAa2D,EAAM3D,YA/BlG,0EAkCY,IAAIuC,SAAQ,SAACtC,EAASC,GAC1B,EAAKqB,cAAc,IAAIxB,EAA4B2D,EAAMC,EAAM3D,SAAUC,EAASC,OAnC1F,gCAqCa8B,KAAKkC,aAAaR,EAAMC,IArCrC,sCAuCY,IAAIQ,MAAM,qBAvCtB,4JA0CsBT,EAAcxB,GAChCF,KAAKuB,MACFa,QAAO,SAACH,GAAD,OAASA,EAAIJ,KAAOH,KAC3BW,SAAQ,SAACJ,GACRA,EAAItD,KAAK2D,cAAcpC,QA9C/B,iCAiDa2B,GACT,IAAIU,EAAMvC,KAAKuB,MAAMiB,WAAU,SAAAP,GAAG,OAAIA,EAAIJ,KAAOA,KAC7CU,EAAM,IACVvC,KAAKuB,MAAMgB,GAAK5D,KAAK2B,QACrBN,KAAKuB,MAAMkB,OAAOF,EAAK,IAEvBA,EAAMvC,KAAKuB,MAAMiB,WAAU,SAAAP,GAAG,OAAIA,EAAIP,OAASG,MACrC,IACV7B,KAAKuB,MAAMgB,GAAK5D,KAAK2B,QACrBN,KAAKuB,MAAMkB,OAAOF,EAAK,GAEvBlD,QAAQe,MAAR,gCAAuCyB,QA5D3C,+EA8DwBH,EAAc7B,GA9DtC,0FA+DWU,QAAQmC,IAAI1C,KAAKuB,MACrBa,QAAO,SAACH,GAAD,OAASA,EAAIJ,KAAOH,KAC3BiB,KAAI,SAAAV,GAAG,OAAIA,EAAItD,KAAKmC,gBAAgBjB,QAjE3C,6KAmEanB,EAAkBV,GAnE/B,mFAoESgC,KAAKsB,WApEd,sBAqEY,IAAIa,MAAM,yBArEtB,eAwE4BJ,KADpBa,EAAkB5C,KAAKuB,MAAMS,MAAK,SAAAC,GAAG,OAAIA,EAAIJ,KAAOnD,GAAYuD,EAAItD,KAAKX,WAAaA,MAvE9F,yCAwEgD4E,EAAgBjE,MAxEhE,cAyEIU,QAAQe,MAAM,UAAW1B,EAAU,gCAC7BmE,EAAI,IAAItE,EAAKyB,KAAKxB,SAAUwB,KAAKvB,GAAIC,EAAUV,GACrDgC,KAAKuB,MAAMK,KAAK,CAAEF,KAAM1B,KAAKvB,GAAIoD,GAAInD,EAAUC,KAAMkE,IACrDA,EAAEjC,iBAAiB,qBAAsB,WACvC,EAAKa,WAAW/C,MA7EtB,UA+EUmE,EAAEC,OA/EZ,eAgFIzD,QAAQe,MAAM1B,EAAU,kBAhF5B,kBAiFWmE,GAjFX,2HAA4BzB,c,QCtIf2B,EACX,WACSC,EACAC,EACAC,EACAC,EACAC,GACN,yBALMJ,cAKP,KAJOC,kBAIP,KAHOC,WAGP,KAFOC,QAEP,KADOC,O,gBCOLC,EAAY,IAgCZC,EAAa,SAACC,EAAeC,GAAhB,OACP,IAAVD,EAAc,KAASA,EAAQC,GAAQD,EAAS,KAE5CE,EAAa,SAACC,GAClB,OAAO,IAAInD,SAAQ,SAACtC,GAClB,IAAM0F,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAAUC,GACvBH,EAAOI,QACT9F,EAAQ0F,EAAOI,OAAOC,aAG1BL,EAAOM,cAAcP,OAcZQ,EAAqB,SAACC,GAAoC,IAAD,EACpCC,mBAAiB,IADmB,mBAC7DpG,EAD6D,KACnDqG,EADmD,OAEpCD,mBAAS,GAF2B,mBAE7DE,EAF6D,KAEnDC,EAFmD,OAO1BH,mBAAwB,CAChEpB,YAAa,EACbrE,UAAMoD,EACNmB,SAAU,CAAEsB,KAAM,GAAIC,KAAM,GAC5BlB,MAAO,EACPJ,MAAO,KAZ2D,mBAO7DuB,EAP6D,KAO9CC,EAP8C,KAgB9DC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACL,OAAVD,GAAmC,IAAjBA,EAAME,OADT,uBAEjBV,EAAY,IACZE,EAAY,GAHK,iCAMbS,EAAOH,EAAM,GACnBR,EAAYW,EAAKR,MAPE,SAQbrD,EAAK,CAAEqD,KAAMQ,EAAKR,KAAMC,KAAMO,EAAKP,MAAQO,GAR9B,2CAAH,sDAUlBC,qBAAU,WACR,GAAKP,EAAc/F,KAAnB,CAEA,GADA4F,EAAYjB,EAAWoB,EAAcnB,MAAOmB,EAAcvB,MAAM4B,SAC7B,IAA/BL,EAAcvB,MAAM4B,OActB,OAbAL,EAAc/F,KAAKwC,KACjB+D,KAAKC,UACH,IAAIpC,EACF2B,EAAc1B,YACd0B,EAAcnB,MAAQF,EACtBqB,EAAcxB,SACd,IACA,KAIN7D,QAAQ+F,IAAI,sBACZV,EAAc/F,KAAK2B,QAGrB,IAAM+E,EAAQX,EAAcvB,MAAMmC,MAAM,EAAGjC,GAC3CqB,EAAc/F,KAAKwC,KACjB+D,KAAKC,UACH,IAAIpC,EACF2B,EAAc1B,YACd0B,EAAcnB,MAAQF,EACtBqB,EAAcxB,SACdmC,GACA,KAINV,GAAiB,SAACY,GAAD,MAAY,CAC3BvC,YAAauC,EAAMvC,YAAc,EACjCrE,KAAM4G,EAAM5G,KACZuE,SAAUqC,EAAMrC,SAChBC,MAAOoC,EAAMpC,MAAMmC,MAAMD,EAAMN,QAC/BxB,MAAOgC,EAAMhC,aAEd,CAACmB,IAEJ,IA3EqBc,EA2EfrE,EAAI,uCAAG,WAAO+B,EAAoBrF,GAA3B,iBAAAiH,EAAA,sEACQX,EAAMsB,OAAOC,KAAKvB,EAAMwB,UAAWzC,EAASsB,MADpD,cACL7F,EADK,gBAELA,EAAKiH,QAFA,uBAGOnC,EAAW5F,GAHlB,OAGLgI,EAHK,OAIXlB,EAAiB,CACf3B,YAAa,EACbrE,KAAMA,EACNuE,SAAUA,EACVC,MAAO0C,EACPtC,MAAOsC,EAAId,SATF,2CAAH,wDAcV,OAAQZ,EAAM2B,KACZ,qBAAKC,UAAU,gBAAf,SACE,sBAAKA,UAAU,QAAf,UACE,6BAAK5B,EAAM6B,eACX,sBAAKD,UAAU,OAAf,UACE,sBAAKA,UAAU,QAAf,2BAEE,qBAAIA,UAAU,gBAAd,WAhGWP,EAiGMrB,EAAMqB,SAhGjCA,EAAS7C,KAAI,SAACsD,GAAD,OACZ,+BAAKA,EAAQjI,SACZ,wBAAQkI,QAASD,EAAQE,MAAzB,oBACA,wBAAQD,QAASD,EAAQG,KAAzB,2BA8FWjC,EAAMkC,cACJjE,QAAO,SAACH,GAAD,OAAUA,EAAIqE,YACrB3D,KAAI,SAACV,GAAD,OACH,+BACGA,EAAIuC,KADP,MACgB,IAAMlB,EAAWrB,EAAIgB,gBAAiBhB,EAAIsE,OAAOxB,SAASyB,QAAQ,GADlF,WAIHrC,EAAMkC,cACJjE,QAAO,SAACH,GAAD,OAASA,EAAIqE,YACpB3D,KAAI,SAACV,GAAD,OACH,6BACE,mBAAGwE,SAAUxE,EAAIuC,KAAMkC,KAAMzE,EAAIkB,MAAjC,SACGlB,EAAIuC,MADsCvC,EAAIP,KAAOO,EAAIuC,iBAOtE,sBAAKuB,UAAU,QAAf,UACE,8CACA,8BACE,wBAAOY,QAASxC,EAAMwB,UAAtB,UACE,cAAC,IAAD,CAAiBiB,KAAMC,MACT,KAAb7I,GAAmBsG,EAAW,IAC7B,gCACGtG,EADH,KACesG,EAASkC,QAAQ,GADhC,QAGE,KACJ,uBACEM,KAAK,OACLf,UAAU,uBACVtH,GAAI0F,EAAMwB,UACVoB,SAtHK,SAACjD,GACpBc,EAAad,EAAEkD,OAAOnC,qBA2HlB,8BACE,wBAAQqB,QAAS/B,EAAM7D,MAAvB,0BAhDa,MCrHV2G,EAAgB,SAAC9C,GAA+B,IAAD,EACAC,mBAAiC,IADjC,mBACnD8C,EADmD,KAC5BC,EAD4B,OAGtB/C,oBAAkB,GAHI,mBAGnDgD,EAHmD,KAGvCC,EAHuC,OAKhBjD,mBAAyB,IALT,mBAKnDiC,EALmD,KAKpCiB,EALoC,KA6F1D,OAtFArC,qBAAU,WACRd,EAAMsB,OAAO7E,iBAAiB,oBAAqB,SACjD2G,GAEA,GAAIA,EAAG3J,SAAWuG,EAAMwB,UACxB,IACE,IAAM6B,EAAUtC,KAAKuC,MAAMF,EAAG1J,MAE9ByJ,GAAiB,SAAC/B,GAChB,IAAMV,EAAQU,EAAMD,QACdoC,EAAM7C,EAAM7C,MAChB,SAACC,GAAD,OACEA,EAAIP,OAAS6F,EAAG3J,QAAUqE,EAAIuC,OAASgD,EAAQtE,SAASsB,QAE5D,YAAYzC,IAAR2F,EAqBK7C,EAAM8C,OAAO,CAClBjG,KAAM6F,EAAG3J,OACTqF,gBAAiBuE,EAAQvE,gBACzBsD,OAAQ,CAAC,CAAEqB,GAAIJ,EAAQxE,YAAaG,MAAOqE,EAAQrE,QACnDA,MAAO,GACPsB,KAAM+C,EAAQtE,SAASuB,KACvBD,KAAMgD,EAAQtE,SAASsB,KACvB8B,UAAU,KA3BgB,IAAxBoB,EAAIzE,iBACNyE,EAAIzE,gBAAkBuE,EAAQvE,gBAC9ByE,EAAInB,OAAS,CAAC,CAAEqB,GAAIJ,EAAQxE,YAAaG,MAAOqE,EAAQrE,QACxDuE,EAAIjD,KAAO+C,EAAQtE,SAASuB,MAExB+C,EAAQpE,KACVsE,EAAIvE,MAAQuE,EAAInB,OACbsB,MAAK,SAAC/C,EAAGgD,GAAJ,OAAUhD,EAAE8C,GAAKE,EAAEF,MACxBG,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAI9E,QAAO,IACzCuE,EAAIpB,UAAW,GAEVoB,EAAInB,OAAO2B,MAAK,SAACjG,GAAD,OAASA,EAAI2F,KAAOJ,EAAQxE,iBAC/C0E,EAAInB,OAASmB,EAAInB,OAAOoB,OAAO,CAC7BC,GAAIJ,EAAQxE,YACZG,MAAOqE,EAAQrE,SAgBlB0B,MAET,MAAOzF,GACPC,QAAQ+F,IAAI,UAAWhG,SAG1B,CAAC+E,IAGJc,qBAAU,WACRd,EAAMsB,OAAO7E,iBAAiB,2BAA4B,SACxD2G,GAEIA,EAAG3J,SAAWuG,EAAMwB,WACxBwB,GAAyB,SAAC3B,GACxB,OAAIA,EAAS0C,MAAK,SAACjG,GAAD,OAASA,EAAIjE,WAAauJ,EAAGvJ,YAAoBwH,EAC5DA,EAASmC,OAAO,CACrB3J,SAAUuJ,EAAGvJ,SACbmI,MAAO,WACLmB,GAAiB,SAACzC,GAAD,OAAWA,EAAM8C,OAAO,CACvCjG,KAAM6F,EAAG3J,OACTqF,gBAAiB,EACjBsD,OAAQ,GACRD,UAAU,EACVnD,MAAO,GACPqB,KAAM+C,EAAGvJ,SACTyG,KAAM,OAER0C,EAAyB,IACzBI,EAAGtJ,WAELmI,KAAM,WACJe,EAAyB,IACzBI,EAAGrJ,oBAKV,CAACiG,IAIF,gCACE,wBAAQ4B,UAAU,cAChBG,QAAS,WAAQmB,GAAc,IADjC,SAC2ClD,EAAM6B,eACjD,cAAC,EAAD,CACExH,SAAU2F,EAAM3F,SAChBsH,KAAMsB,EACN9G,MAAO,kBAAM+G,GAAc,IAC3B5B,OAAQtB,EAAMsB,OACdD,SAAU0B,EACVxF,KAAMyC,EAAMwB,UACZK,aAAc7B,EAAM6B,aACpBL,UAAWxB,EAAMwB,UACjBU,cAAeA,QC5HV8B,EAAW,SAAChE,GAA0B,IAAD,EAChBC,mBAAoB,IADJ,mBACzCgE,EADyC,KAC/BC,EAD+B,KAqBhD,OAnBApD,qBAAU,WACRd,EAAM3F,SAASoC,iBAAiB,kBAAmB,SACjD2G,GAEAlI,QAAQe,MAAM,UAAWmH,EAAG9I,GAAI,UAChC4J,GAAY,SAACD,GACX,OAAKA,EAASF,MAAK,SAACjG,GAAD,OAASA,EAAIxD,KAAO8I,EAAG9I,MAGnC2J,EAFEA,EAAST,OAAO,CAAElJ,GAAI8I,EAAG9I,GAAIuH,aAAcuB,EAAGvB,qBAM3D7B,EAAM3F,SAASoC,iBAAiB,gBAAiB,SAAC2G,GAChDlI,QAAQe,MAAM,UAAWmH,EAAG9I,GAAI,QAChC4J,GAAY,SAACD,GAAD,OAAcA,EAAShG,QAAO,SAACH,GAAD,OAASA,EAAIxD,KAAO8I,EAAG9I,cAElE,CAAC0F,IAGF,qBAAK4B,UAAU,gBAAf,SACGqC,EACEhG,QAAO,SAACkG,GAAD,OAAaA,EAAQ7J,KAAO0F,EAAM1F,MACzCoJ,MAAK,SAAC/C,EAAGgD,GAAJ,OAAUhD,EAAEkB,aAAauC,cAAcT,EAAE9B,iBAC9CrD,KAAI,SAAC2F,GAAD,OACH,qBAAKvC,UAAU,QAAf,SACE,cAAC,EAAD,CAEEN,OAAQtB,EAAMsB,OACdjH,SAAU2F,EAAM3F,SAChBmH,UAAW2C,EAAQ7J,GACnBuH,aAAcsC,EAAQtC,cAJjBsC,EAAQ7J,Y,iBCxCd+J,EAAb,kDAEE,WAAYpK,EAAcK,GAAa,IAAD,8BACpC,gCAAiBL,KAFnBK,QACsC,EAEpC,EAAKA,GAAKA,EAF0B,EAFxC,sBAAkCX,QAQrB2K,EAAb,kDAEE,WAAYhK,EAAYuH,GAAuB,IAAD,8BAC5C,cAAM,SAAUvH,IAFlBuH,kBAC8C,EAE5C,EAAKA,aAAeA,EAFwB,EAFhD,UAAwCwC,GAO3BE,EAAb,kDACE,WAAYjK,GAAa,uCACjB,OAAQA,GAFlB,UAAsC+J,GAUjBG,E,kDAanB,WAAoBlK,EAAoB+F,GAAe,IAAD,uBACpD,gBADkB/F,KAAkC,EAAd+F,OAAc,EAZ9CiB,YAY8C,IAX9CmD,UAW8C,IAV9CR,SAAsB,GAY5B,IAAMS,EAAkB,YAExB,IAAMC,MAAM,6CAA+C,UAJP,OAKpD,EAAKF,KAAOA,IAAKG,QAAQ,0CAA2C,CAClEC,SAAU,oCACVC,SAAU,4BACVC,eAAgB,IAChBC,OAAO,EACPC,aAAa,EACbC,SAAS,SAAD,OAAW5K,GACnB6K,KAAM,CACJC,QAAQ,EACR/B,QAAS,GACTgC,IAvDS,EAwDTC,MAAM,YAAD,OAAc,EAAKhL,OAG5B,EAAKmK,KAAKc,GAAG,WAAW,SAACD,EAAOjC,GAE9B,GAAIiC,EAAME,WAAWd,GAAqB,CAExC,IAAMe,GADNH,EAAQA,EAAMnE,MAAMuD,EAAmB9D,SAClB8E,MAAM,KAC3B,GAAsB,IAAlBD,EAAO7E,OAAc,CACvB,IAAMY,EAAYiE,EAAO,GACzB,GAAuB,IAAnBpC,EAAQzC,OACN,EAAKqD,SAASF,MAAK,SAAAjG,GAAG,OAAIA,EAAIxD,KAAOkH,OACvC,EAAKyC,SAAW,EAAKA,SAAShG,QAAO,SAAAH,GAAG,OAAIA,EAAIxD,KAAOkH,MAEzD,EAAKpG,cAAc,IAAImJ,EAAiB/C,QACnC,CACL,IAAMmE,EAAQ5E,KAAKuC,MAAMD,EAAQxD,YAC5B,EAAKoE,SAASF,MAAK,SAAAjG,GAAG,OAAIA,EAAIxD,KAAOkH,MACxC,EAAKyC,SAASxG,KAAK,CAAEnD,GAAIkH,EAAWnB,KAAMsF,EAAMtF,OAElD,EAAKjF,cAAc,IAAIkJ,EAAmB9C,EAAWmE,EAAMtF,aAExD,GAAIiF,EAAME,WAAW,EAAKlL,IAAK,CAEpC,QAAoBsD,IAAhB,EAAK0D,OAEP,YADApG,QAAQC,MAAM,yCAIhB,OADAmK,EAAQA,EAAMnE,MAAM,EAAK7G,GAAGsG,OAAS,IAEnC,IAAK,YAED,IAAMpF,EAAMuF,KAAKuC,MAAMD,EAAQxD,YAC/B,EAAKyB,OAAO3E,gBAAgBnB,EAAI+B,KAAM/B,EAAIE,WAE5C,MACF,IAAK,qBAED,IAAMF,EAAMuF,KAAKuC,MAAMD,EAAQxD,YAC/B,EAAKyB,OAAOhE,WAAW9B,EAAI+B,MAE7B,MACF,IAAK,qBAED,IAAM/B,EAAMuF,KAAKuC,MAAMD,EAAQxD,YAC/B,EAAKyB,OAAOsE,oBAAoBpK,EAAI+B,KAAM/B,EAAIO,MAEhD,MACF,IAAK,cAED,IAAMP,EAAMuF,KAAKuC,MAAMD,EAAQxD,YAC/B,EAAKyB,OACF3D,YAAYnC,EAAI+B,KAAM,CAAExB,KAAMP,EAAIO,KAAMlC,SAAU2B,EAAI3B,WACtDgM,MAAK,SAACC,GACL,EAAKrB,KAAKsB,QAAV,mBACcvK,EAAI+B,KADlB,uBAEEwD,KAAKC,UAAU,CAAEzD,KAAM,EAAKjD,GAAIyB,KAAM+J,IACtC,CAAET,IAjHP,OAoHEW,OAAM,WACL,EAAKvB,KAAKsB,QAAV,mBACcvK,EAAI+B,KADlB,uBAEEwD,KAAKC,UAAU,CAAEzD,KAAM,EAAKjD,KAC5B,CAAE+K,IAxHP,OA4HH,MACF,QACEnK,QAAQ+K,KAAK,wBAAyBX,SAKhD,EAAKb,KAAKc,GAAG,UAAb,sBAAwB,4BAAA5E,EAAA,sDAChBuF,EAAS,CAAC,YAAD,OACD,EAAK5L,GADJ,oBAKf,EAAKmK,KAAK0B,UAAUD,EAAQ,CAAEb,IAzInB,IAyIoC,SAACpK,GAC1CA,EACFC,QAAQC,MAAM,wBAAyBF,IAGzCC,QAAQ+F,IAAI,kBACZ,EAAKwD,KAAKsB,QAAV,mBAA8B,EAAKzL,IAAMyG,KAAKC,UAAU,CAAE1G,GAAI,EAAKA,GAAI+F,KAAM,EAAKA,OAAS,CACzFgF,IAhJO,EAiJPD,QAAQ,IACP,SAACnK,GACEA,GACFC,QAAQC,MAAMF,UAIpBC,QAAQe,MAAM,yCArBQ,4CA3F4B,E,oDAPpDJ,KAAK4I,KAAKxF,KAAI,K,8BAER3E,GACN,IAAM8L,EAAIvK,KAAKoI,SAASpG,MAAK,SAAAC,GAAG,OAAIA,EAAIxD,KAAOA,KAC/C,YAAUsD,IAANwI,EAA0B,CAAE9L,GAAIA,EAAI+F,KAAM,YACvC+F,M,8CAsHA9E,GACPzF,KAAKyF,OAASA,I,+EAGM5D,EAAYhC,G,qGACzB,IAAIU,SAAQ,SAACtC,EAASC,GAC3B,EAAK0K,KAAKsB,QAAV,mBACcrI,EADd,cAEEqD,KAAKC,UAAU,CACbtF,YACA6B,KAAM,EAAKjD,KAEb,CAAE+K,IAxKO,IAyKT,SAACpK,GACKA,EACFlB,EAAOkB,GAEPnB,W,mLAMY4D,EAAY3B,EAAiClC,G,qGAC1D,IAAIuC,SAAQ,SAACtC,EAASC,GAC3B,EAAK0K,KAAKsB,QAAV,mBACcrI,EADd,gBAEEqD,KAAKC,UAAU,CAAEzD,KAAM,EAAKjD,GAAIyB,KAAMA,EAAMlC,SAAUA,IACtD,CAAEwL,IAxLO,IAyLT,SAACpK,GACKA,EACFlB,EAAOkB,GAEPnB,W,uHAlK0BmD,cCbhCoJ,EAAwB,SAAC,GAGzB,IAAD,iBAFFC,EAEE,KAFQC,EAER,WADHC,EACG,uDADMC,UAAUC,SAEnB,MAAO,CAACJ,EAAMK,kBAAkBH,IAAzB,mBAAqCD,IAAMK,KAAK,KAGnDC,EAAO,SAACC,GACZ,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMlG,UAS1CtG,EAvBG,YAAI4M,MAAM,IACd1I,KAAI,qBAA0B,GAAhBuI,KAAKE,WAAgBpH,SAAS,OAC5C+G,KAAK,IAsBJvG,EANE,GAAN,OAAUgG,EAAsBQ,EAAKM,IAArC,YAAqDd,EACnDQ,EAAKO,KAOH/M,EAAW,IAAImK,EAASlK,EAAI+F,GAE5BiB,EAAS,IAAIpE,EAAO7C,EAAUC,GACpCgH,EAAOjE,WAoBQgK,MAlBf,WACE,OACE,sBAAKzF,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEN,OAAQA,EACRO,aAAcxB,EACdhG,SAAUA,EACVC,GAAIA,MAGR,qBAAKsH,UAAU,OAAf,SACE,wCAAWvB,WCvCJiH,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.1229ac4a.chunk.js","sourcesContent":["import Signaler, { SessionLeftEvent } from \"./signaler\";\nimport { Offer } from './types';\n\nexport class MessageReceivedEvent extends Event {\n  constructor(public sender: string, public data: string) {\n    super(\"message_received\");\n  }\n}\n\nexport class AuthorizationRequestedEvent extends Event {\n  constructor(public sender: string, public filename: string, public resolve: Function, public reject: Function) {\n    super(\"authorization_requested\");\n  }\n}\n\nexport class ConnectionEvent extends Event {\n  constructor(kind: string) {\n    super(`connection_${kind}`)\n  }\n}\n\nexport class ConnectionClosedEvent extends ConnectionEvent {\n  constructor() {\n    super('closed');\n  }\n}\nexport class ConnectionReadyEvent extends ConnectionEvent {\n  constructor() {\n    super('ready');\n  }\n}\n\n\nexport class Conn extends EventTarget {\n  private conn: RTCPeerConnection;\n  private chan: RTCDataChannel;\n  constructor(private signaler: Signaler, private id: string, private remoteId: string, public filename: string) {\n    super();\n    this.signaler = signaler;\n    this.id = id;\n    this.filename = filename;\n    this.remoteId = remoteId;\n    const defaults = {\n      config: {\n        iceServers: [\n          { urls: \"stun:stun.l.google.com:19302\" },\n        ]\n      },\n      debug: 3,\n    };\n    this.conn = new RTCPeerConnection(defaults.config);\n    this.conn.ondatachannel = (event) => {\n      event.channel.onerror = (err) => {\n        console.error(err)\n        this.dispatchEvent(new ConnectionClosedEvent())\n      }\n      event.channel.onclose = (err) => {\n        this.dispatchEvent(new ConnectionClosedEvent())\n      }\n      event.channel.onopen = () => {\n        this.dispatchEvent(new ConnectionReadyEvent())\n      };\n      event.channel.onmessage = (msg) => {\n        this.dispatchEvent(new MessageReceivedEvent(this.remoteId, msg.data));\n      };\n    };\n    this.conn.onicecandidate = (event) => {\n      if (event.candidate) {\n        this.signaler.signalCandidate(this.remoteId, event.candidate);\n      }\n    };\n    this.chan = this.conn.createDataChannel(`io.pushr.channels.send.${id}-${remoteId}`);\n\n  }\n  async init() {\n    const desc = await this.conn.createOffer();\n    this.conn.setLocalDescription(desc);\n    console.debug(this.remoteId, 'sending description')\n    return this.signaler.sendDescription(this.remoteId, desc, this.filename);\n  }\n  close() {\n    this.chan.close();\n    this.conn.close()\n  }\n  async ready(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.chan.readyState === \"open\") {\n        resolve();\n        return\n      }\n      let success: EventListener, failure: EventListener;\n\n      success = () => { this.removeEventListener('connection_closed', failure); resolve() };\n      failure = () => { this.removeEventListener('connection_ready', success); reject() };\n\n      console.debug('waiting for conn to be ready. current state is', this.chan.readyState)\n      this.addEventListener('connection_ready', success, { once: true });\n      this.addEventListener('connection_closed', failure, { once: true });\n\n    });\n  }\n  async addIceCandidate(candidate: RTCIceCandidate | RTCIceCandidateInit) {\n    if (candidate !== null) {\n      console.debug(this.remoteId, 'received ice candidate', candidate)\n      try {\n        await this.conn.addIceCandidate(candidate);\n      } catch (err) {\n        console.error(\"failed to add remote ICE candidate:\", err)\n      }\n    }\n  }\n  async informOffer(desc: RTCSessionDescriptionInit) {\n    console.debug(this.remoteId, 'received remote description', desc)\n    this.conn.setRemoteDescription(desc);\n    const answer = await this.conn.createAnswer();\n    this.conn.setLocalDescription(answer);\n    console.debug(this.remoteId, 'description exchange complete')\n    return answer;\n  }\n  offerCallback(desc: RTCSessionDescriptionInit) {\n    this.conn.setRemoteDescription(desc);\n    console.debug(this.remoteId, 'description exchange complete')\n  }\n  send(message: string) {\n    return this.chan.send(message);\n  }\n}\n\ninterface establishedConn {\n  to: string;\n  from: string;\n  conn: Conn;\n}\n\nexport class Dialer extends EventTarget {\n  private registered = false;\n  private conns: establishedConn[];\n\n  constructor(private signaler: Signaler, private id: string) {\n    super();\n    this.signaler = signaler;\n    this.conns = [];\n    this.id = id;\n  }\n  register() {\n    this.signaler.register(this);\n    this.signaler.addEventListener('session_left', ((event: SessionLeftEvent) => {\n      this.removeConn(event.id);\n    }) as EventListener)\n    this.registered = true;\n  }\n  async confirmOffer(from: string, offer: Offer) {\n    const conn = new Conn(this.signaler, this.id, from, offer.filename);\n    conn.addEventListener('connection_closed', (() => {\n      this.removeConn(from);\n    }) as EventListener);\n\n    conn.addEventListener(\"message_received\", ((event: MessageReceivedEvent) => {\n      this.dispatchEvent(new MessageReceivedEvent(event.sender, event.data))\n    }) as EventListener);\n\n    this.conns.push({ from: from, to: this.id, conn: conn });\n    return conn.informOffer(offer.desc);\n  }\n  async informOffer(from: string, offer: Offer) {\n    let establishedConn = this.conns.find(elt => elt.from === from && elt.conn.filename === offer.filename);\n    if (establishedConn !== undefined) { return }\n    try {\n      await new Promise((resolve, reject) => {\n        this.dispatchEvent(new AuthorizationRequestedEvent(from, offer.filename, resolve, reject));\n      })\n      return this.confirmOffer(from, offer);\n    } catch {\n      throw new Error('permission denied')\n    }\n  }\n  descriptionCallback(from: string, desc: RTCSessionDescriptionInit) {\n    this.conns\n      .filter((elt) => elt.to === from)\n      .forEach((elt) => {\n        elt.conn.offerCallback(desc);\n      });\n  }\n  removeConn(to: string) {\n    let idx = this.conns.findIndex(elt => elt.to === to);\n    if (idx < 0) { return }\n    this.conns[idx].conn.close();\n    this.conns.splice(idx, 1);\n\n    idx = this.conns.findIndex(elt => elt.from === to);\n    if (idx < 0) { return }\n    this.conns[idx].conn.close();\n    this.conns.splice(idx, 1);\n\n    console.debug(`removed connection to ${to}`)\n  }\n  async addIceCandidate(from: string, candidate: RTCIceCandidate | RTCIceCandidateInit) {\n    return Promise.all(this.conns\n      .filter((elt) => elt.to === from)\n      .map(elt => elt.conn.addIceCandidate(candidate)));\n  }\n  async dial(remoteId: string, filename: string) {\n    if (!this.registered) {\n      throw new Error(\"dialer not registered\")\n    }\n    let establishedConn = this.conns.find(elt => elt.to === remoteId && elt.conn.filename === filename);\n    if (establishedConn !== undefined) { return establishedConn.conn }\n    console.debug('conn to', remoteId, 'not found: dialing a new one')\n    const c = new Conn(this.signaler, this.id, remoteId, filename);\n    this.conns.push({ from: this.id, to: remoteId, conn: c });\n    c.addEventListener('connection_closed', (() => {\n      this.removeConn(remoteId);\n    }) as EventListener);\n    await c.init();\n    console.debug(remoteId, 'conn init done')\n    return c;\n  }\n}\n","export class Payload {\n  constructor(\n    public chunkNumber: number,\n    public chunkTotalCount: number,\n    public metadata: Metadata,\n    public value: string,\n    public end: boolean,\n  ) { }\n}\n\nexport interface Offer {\n  desc: RTCSessionDescriptionInit;\n  filename: string\n};\n\nexport interface Metadata {\n  name: string;\n  size: number;\n}\n","import { useEffect, useState } from \"react\";\nimport Signaler from \"./signaler\";\nimport { Conn, Dialer } from \"./dialer\";\nimport { Metadata, Payload } from \"./types\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\n\ninterface fileTransfertRequest {\n  filename: string;\n  allow?: () => void;\n  deny?: () => void;\n}\n\nconst chunkSize = 1000;\n\nexport interface RemoteSessionModalProps {\n  dialer: Dialer;\n  signaler: Signaler;\n  from: string;\n  requests: fileTransfertRequest[];\n  show: boolean;\n  sessionId: string;\n  friendlyName: string;\n  receivedFiles: receivedFile[]\n  close: () => void\n}\ninterface progressState {\n  conn?: Conn;\n  value: string;\n  metadata: Metadata;\n  chunkNumber: number;\n  total: number;\n}\n\ninterface receivedFile {\n  name: string;\n  from: string;\n  size: number;\n  value: string;\n  chunkTotalCount: number;\n  chunks: { no: number; value: string }[];\n  complete: boolean;\n}\n\n\nconst percentage = (total: number, left: number): number =>\n  total === 0 ? 100 : (((total - left) / total) * 100);\n\nconst encodeBlob = (blob: Blob): Promise<string> => {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onloadend = function (e) {\n      if (reader.result) {\n        resolve(reader.result.toString());\n      }\n    };\n    reader.readAsDataURL(blob);\n  });\n};\n\n\nconst authorization = (requests: fileTransfertRequest[]) =>\n  requests.map((request) =>\n  (<li>{request.filename}\n    <button onClick={request.allow}>Accept</button>\n    <button onClick={request.deny}>Refuse</button>\n  </li>)\n  );\n\n\nexport const RemoteSessionModal = (props: RemoteSessionModalProps) => {\n  const [filename, setFilename] = useState<string>(\"\");\n  const [progress, setProgress] = useState(0);\n  const handleSubmit = (e: React.ChangeEvent<HTMLInputElement>) => {\n    handleChange(e.target.files);\n  };\n\n  const [progressState, setProgressState] = useState<progressState>({\n    chunkNumber: 0,\n    conn: undefined,\n    metadata: { name: \"\", size: 0 },\n    total: 0,\n    value: \"\",\n  });\n\n\n  const handleChange = async (files: FileList | null) => {\n    if (files === null || files.length === 0) {\n      setFilename(\"\");\n      setProgress(0);\n      return;\n    }\n    const file = files[0];\n    setFilename(file.name);\n    await send({ name: file.name, size: file.size }, file);\n  };\n  useEffect(() => {\n    if (!progressState.conn) { return }\n    setProgress(percentage(progressState.total, progressState.value.length));\n    if (progressState.value.length === 0) {\n      progressState.conn.send(\n        JSON.stringify(\n          new Payload(\n            progressState.chunkNumber,\n            progressState.total / chunkSize,\n            progressState.metadata,\n            \"\",\n            true\n          )\n        )\n      );\n      console.log(\"send complete\");\n      progressState.conn.close()\n      return;\n    }\n    const chunk = progressState.value.slice(0, chunkSize);\n    progressState.conn.send(\n      JSON.stringify(\n        new Payload(\n          progressState.chunkNumber,\n          progressState.total / chunkSize,\n          progressState.metadata,\n          chunk,\n          false\n        )\n      )\n    );\n    setProgressState((state) => ({\n      chunkNumber: state.chunkNumber + 1,\n      conn: state.conn,\n      metadata: state.metadata,\n      value: state.value.slice(chunk.length),\n      total: state.total,\n    }));\n  }, [progressState]);\n\n  const send = async (metadata: Metadata, data: Blob) => {\n    const conn = await props.dialer.dial(props.sessionId, metadata.name);\n    await conn.ready();\n    const b64 = await encodeBlob(data);\n    setProgressState({\n      chunkNumber: 0,\n      conn: conn,\n      metadata: metadata,\n      value: b64,\n      total: b64.length,\n    });\n  };\n\n\n  return !props.show ? null : (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <h3>{props.friendlyName}</h3>\n        <div className=\"grid\">\n          <div className=\"block\">\n            Received files\n            <ul className=\"receivedFiles\">\n              {authorization(props.requests)}\n              {props.receivedFiles\n                .filter((elt) => !elt.complete)\n                .map((elt) => (\n                  <li>\n                    {elt.name} ({(100 - percentage(elt.chunkTotalCount, elt.chunks.length)).toFixed(2)}%)\n                  </li>\n                ))}\n              {props.receivedFiles\n                .filter((elt) => elt.complete)\n                .map((elt) => (\n                  <li>\n                    <a download={elt.name} href={elt.value} key={elt.from + elt.name}>\n                      {elt.name}\n                    </a>\n                  </li>\n                ))}\n            </ul>\n          </div>\n          <div className=\"block\">\n            <div>Send a file</div>\n            <div>\n              <label htmlFor={props.sessionId}>\n                <FontAwesomeIcon icon={faUpload} />\n                {filename !== \"\" && progress < 100 ? (\n                  <div>\n                    {filename} ({progress.toFixed(2)}%)\n                  </div>\n                ) : null}\n                <input\n                  type=\"file\"\n                  className=\"remote-session-input\"\n                  id={props.sessionId}\n                  onChange={handleSubmit}\n                />\n              </label>\n            </div>\n          </div>\n        </div>\n        <div>\n          <button onClick={props.close}>Close</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { AuthorizationRequestedEvent, Dialer, MessageReceivedEvent } from \"./dialer\";\nimport { Payload } from \"./types\";\nimport { RemoteSessionModal } from './RemoteSessionModal';\nimport Signaler from './signaler';\n\nexport interface RemoteSessionProps {\n  sessionId: string;\n  friendlyName: string;\n  dialer: Dialer;\n  signaler: Signaler;\n}\n\ninterface receivedFile {\n  name: string;\n  from: string;\n  size: number;\n  value: string;\n  chunkTotalCount: number;\n  chunks: { no: number; value: string }[];\n  complete: boolean;\n}\n\n\n\ninterface fileTransfertRequest {\n  filename: string;\n  allow?: () => void;\n  deny?: () => void;\n}\n\n\n\nexport const RemoteSession = (props: RemoteSessionProps) => {\n  const [fileTransfertRequests, setfileTransfertRequests] = useState<fileTransfertRequest[]>([]);\n\n  const [modalState, setModalState] = useState<boolean>(false);\n\n  const [receivedFiles, setReceivedFiles] = useState<receivedFile[]>([]);\n\n  useEffect(() => {\n    props.dialer.addEventListener(\"message_received\", ((\n      ev: MessageReceivedEvent\n    ) => {\n      if (ev.sender !== props.sessionId) { return }\n      try {\n        const payload = JSON.parse(ev.data) as Payload;\n\n        setReceivedFiles((state: receivedFile[]) => {\n          const files = state.slice();\n          const old = files.find(\n            (elt) =>\n              elt.from === ev.sender && elt.name === payload.metadata.name\n          );\n          if (old !== undefined) {\n            if (old.chunkTotalCount === 0) {\n              old.chunkTotalCount = payload.chunkTotalCount;\n              old.chunks = [{ no: payload.chunkNumber, value: payload.value }];\n              old.size = payload.metadata.size;\n            } else {\n              if (payload.end) {\n                old.value = old.chunks\n                  .sort((a, b) => a.no - b.no)\n                  .reduce((acc, cur) => acc + cur.value, \"\");\n                old.complete = true;\n              } else {\n                if (!old.chunks.some((elt) => elt.no === payload.chunkNumber)) {\n                  old.chunks = old.chunks.concat({\n                    no: payload.chunkNumber,\n                    value: payload.value,\n                  });\n                }\n              }\n            }\n          } else {\n            return files.concat({\n              from: ev.sender,\n              chunkTotalCount: payload.chunkTotalCount,\n              chunks: [{ no: payload.chunkNumber, value: payload.value }],\n              value: \"\",\n              size: payload.metadata.size,\n              name: payload.metadata.name,\n              complete: false,\n            });\n          }\n          return files;\n        });\n      } catch (err) {\n        console.log(\"failed:\", err);\n      }\n    }) as EventListener);\n  }, [props]);\n\n\n  useEffect(() => {\n    props.dialer.addEventListener(\"authorization_requested\", ((\n      ev: AuthorizationRequestedEvent\n    ) => {\n      if (ev.sender !== props.sessionId) { return }\n      setfileTransfertRequests((requests) => {\n        if (requests.some((elt) => elt.filename === ev.filename)) { return requests }\n        return requests.concat({\n          filename: ev.filename,\n          allow: () => {\n            setReceivedFiles((files) => files.concat({\n              from: ev.sender,\n              chunkTotalCount: 0,\n              chunks: [],\n              complete: false,\n              value: \"\",\n              name: ev.filename,\n              size: 0,\n            }))\n            setfileTransfertRequests([]);\n            ev.resolve()\n          },\n          deny: () => {\n            setfileTransfertRequests([]);\n            ev.reject();\n          },\n        })\n      })\n    }) as EventListener);\n  }, [props]);\n\n\n  return (\n    <div>\n      <button className=\"sessionIcon\"\n        onClick={() => { setModalState(true) }}>{props.friendlyName}</button>\n      <RemoteSessionModal\n        signaler={props.signaler}\n        show={modalState}\n        close={() => setModalState(false)}\n        dialer={props.dialer}\n        requests={fileTransfertRequests}\n        from={props.sessionId}\n        friendlyName={props.friendlyName}\n        sessionId={props.sessionId}\n        receivedFiles={receivedFiles}\n      ></RemoteSessionModal>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Dialer } from \"./dialer\";\nimport { RemoteSession } from \"./RemoteSession\";\nimport Signaler, { SessionJoinedEvent, SessionLeftEvent } from \"./signaler\";\n\nexport interface PresenceProps {\n  id: string;\n  friendlyName: string;\n  dialer: Dialer;\n  signaler: Signaler;\n}\ninterface session {\n  id: string;\n  friendlyName: string;\n}\nexport const Presence = (props: PresenceProps) => {\n  const [sessions, setSessions] = useState<session[]>([]);\n  useEffect(() => {\n    props.signaler.addEventListener(\"session_joined\", ((\n      ev: SessionJoinedEvent\n    ) => {\n      console.debug(\"session\", ev.id, \"joined\");\n      setSessions((sessions) => {\n        if (!sessions.some((elt) => elt.id === ev.id)) {\n          return sessions.concat({ id: ev.id, friendlyName: ev.friendlyName });\n        }\n        return sessions;\n      });\n    }) as EventListener);\n\n    props.signaler.addEventListener(\"session_left\", ((ev: SessionLeftEvent) => {\n      console.debug(\"session\", ev.id, \"left\");\n      setSessions((sessions) => sessions.filter((elt) => elt.id !== ev.id));\n    }) as EventListener);\n  }, [props]);\n\n  return (\n    <div className=\"presence grid\">\n      {sessions\n        .filter((session) => session.id !== props.id)\n        .sort((a, b) => a.friendlyName.localeCompare(b.friendlyName))\n        .map((session) => (\n          <div className=\"block\">\n            <RemoteSession\n              key={session.id}\n              dialer={props.dialer}\n              signaler={props.signaler}\n              sessionId={session.id}\n              friendlyName={session.friendlyName}\n            />\n          </div>\n        ))}\n    </div>\n  );\n};\n","import mqtt from \"mqtt\";\n\nconst qosLevel = 2;\n\nexport class SessionEvent extends Event {\n  id: string;\n  constructor(kind: string, id: string) {\n    super(`session_${kind}`);\n    this.id = id;\n  }\n}\n\nexport class SessionJoinedEvent extends SessionEvent {\n  friendlyName: string;\n  constructor(id: string, friendlyName: string) {\n    super(\"joined\", id);\n    this.friendlyName = friendlyName;\n  }\n}\nexport class SessionLeftEvent extends SessionEvent {\n  constructor(id: string) {\n    super(\"left\", id);\n  }\n}\n\ninterface session {\n  id: string;\n  name: string;\n}\nexport default class Signaler extends EventTarget {\n  private dialer: any;\n  private mqtt: mqtt.MqttClient;\n  private sessions: session[] = [];\n\n  close() {\n    this.mqtt.end(true);\n  }\n  getPeer(id: string): session {\n    const v = this.sessions.find(elt => elt.id === id)\n    if (v === undefined) { return { id: id, name: ' Unknown' } }\n    return v;\n  }\n  constructor(private id: string, private name: string) {\n    super();\n    const mqttPresencePrefix = `sessions/`;\n    // chrome refuses to connect without this, I do not understand why.\n    try { fetch(\"https://broker.iot.cloud.vx-labs.net/mqtt\") } catch { }\n    this.mqtt = mqtt.connect(\"wss://broker.iot.cloud.vx-labs.net/mqtt\", {\n      username: \"julien@bonachera.fr/pushr/browser\",\n      password: \"VeryPasswordMuchSecureWow\",\n      connectTimeout: 30 * 1000,\n      clean: true,\n      resubscribe: false,\n      clientId: `pushr_${id}`,\n      will: {\n        retain: true,\n        payload: '',\n        qos: qosLevel,\n        topic: `sessions/${this.id}`,\n      },\n    });\n    this.mqtt.on(\"message\", (topic, payload) => {\n      //console.debug(`${topic} -> ${payload.toString()}`);\n      if (topic.startsWith(mqttPresencePrefix)) {\n        topic = topic.slice(mqttPresencePrefix.length);\n        const tokens = topic.split(\"/\");\n        if (tokens.length === 1) {\n          const sessionId = tokens[0];\n          if (payload.length === 0) {\n            if (this.sessions.some(elt => elt.id === sessionId)) {\n              this.sessions = this.sessions.filter(elt => elt.id !== sessionId)\n            }\n            this.dispatchEvent(new SessionLeftEvent(sessionId));\n          } else {\n            const input = JSON.parse(payload.toString())\n            if (!this.sessions.some(elt => elt.id === sessionId)) {\n              this.sessions.push({ id: sessionId, name: input.name })\n            }\n            this.dispatchEvent(new SessionJoinedEvent(sessionId, input.name));\n          }\n        } else if (topic.startsWith(this.id)) {\n          // RPC\n          if (this.dialer === undefined) {\n            console.error('dropped packet: dialer not registered')\n            return;\n          }\n          topic = topic.slice(this.id.length + 1);\n          switch (topic) {\n            case \"candidate\":\n              {\n                const msg = JSON.parse(payload.toString());\n                this.dialer.addIceCandidate(msg.from, msg.candidate);\n              }\n              break;\n            case \"description_denied\":\n              {\n                const msg = JSON.parse(payload.toString());\n                this.dialer.removeConn(msg.from);\n              }\n              break;\n            case \"description_answer\":\n              {\n                const msg = JSON.parse(payload.toString());\n                this.dialer.descriptionCallback(msg.from, msg.desc);\n              }\n              break;\n            case \"description\":\n              {\n                const msg = JSON.parse(payload.toString());\n                this.dialer\n                  .informOffer(msg.from, { desc: msg.desc, filename: msg.filename })\n                  .then((resp: any) => {\n                    this.mqtt.publish(\n                      `sessions/${msg.from}/description_answer`,\n                      JSON.stringify({ from: this.id, desc: resp }),\n                      { qos: qosLevel }\n                    );\n                  })\n                  .catch(() => {\n                    this.mqtt.publish(\n                      `sessions/${msg.from}/description_denied`,\n                      JSON.stringify({ from: this.id, }),\n                      { qos: qosLevel }\n                    );\n                  });\n              }\n              break;\n            default:\n              console.warn(\"unknown rpc received:\", topic);\n          }\n        }\n      }\n    });\n    this.mqtt.on(\"connect\", async () => {\n      const topics = [\n        `sessions/${this.id}/+`,\n        `sessions/+`\n      ]\n\n      this.mqtt.subscribe(topics, { qos: qosLevel }, (err) => {\n        if (err) {\n          console.error(\"presence setup failed\", err)\n          return\n        }\n        console.log('presence setup')\n        this.mqtt.publish(`sessions/${this.id}`, JSON.stringify({ id: this.id, name: this.name }), {\n          qos: qosLevel,\n          retain: true,\n        }, (err) => {\n          if (err) {\n            console.error(err)\n          }\n        });\n      });\n      console.debug('connection to mqtt broker established')\n    });\n  }\n\n  register(dialer: any) {\n    this.dialer = dialer;\n  }\n\n  async signalCandidate(to: string, candidate: any): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.mqtt.publish(\n        `sessions/${to}/candidate`,\n        JSON.stringify({\n          candidate,\n          from: this.id,\n        }),\n        { qos: qosLevel },\n        (err) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        }\n      );\n    });\n  }\n  async sendDescription(to: string, desc: RTCSessionDescriptionInit, filename: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.mqtt.publish(\n        `sessions/${to}/description`,\n        JSON.stringify({ from: this.id, desc: desc, filename: filename }),\n        { qos: qosLevel },\n        (err) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        }\n      );\n    });\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport names from \"./assets/names.json\";\nimport adjectives from \"./assets/adjectives.json\";\nimport { Dialer } from \"./dialer\";\nimport { Presence } from \"./Presence\";\nimport Signaler from \"./signaler\";\n\n\nconst getID = (): string => {\n  return [...Array(8)]\n    .map(() => (~~(Math.random() * 36)).toString(36))\n    .join(\"\");\n};\n\n\nconst capitalizeFirstLetter = (\n  [first, ...rest]: string,\n  locale = navigator.language\n) => {\n  return [first.toLocaleUpperCase(locale), ...rest].join(\"\");\n};\n\nconst pick = (array: string[]): string => {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\nconst getName = (): string => {\n  return `${capitalizeFirstLetter(pick(adjectives))} ${capitalizeFirstLetter(\n    pick(names)\n  )}`;\n};\n\nconst id = getID();\nconst name = getName();\n\nconst signaler = new Signaler(id, name);\n\nconst dialer = new Dialer(signaler, id);\ndialer.register();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"peers\">\n        <Presence\n          dialer={dialer}\n          friendlyName={name}\n          signaler={signaler}\n          id={id}\n        />\n      </div>\n      <div className=\"self\">\n        <div>I am {name}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}