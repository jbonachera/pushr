{"version":3,"sources":["dialer.ts","types.ts","RemoteSession.tsx","Presence.tsx","signaler.ts","AuthorizationModal.tsx","Files.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MessageReceivedEvent","sender","data","Event","AuthorizationRequestedEvent","resolve","reject","ConnectionEvent","kind","ConnectionClosedEvent","ConnectionReadyEvent","Conn","signaler","id","remoteId","conn","chan","RTCPeerConnection","iceServers","urls","credential","username","ondatachannel","event","channel","onerror","err","console","error","dispatchEvent","onclose","onopen","onmessage","msg","onicecandidate","candidate","signalCandidate","createDataChannel","this","createOffer","desc","setLocalDescription","debug","sendDescription","close","Promise","success","failure","readyState","removeEventListener","addEventListener","once","addIceCandidate","setRemoteDescription","createAnswer","answer","message","send","EventTarget","Dialer","registered","conns","register","removeConn","from","push","to","informOffer","undefined","find","elt","confirmOffer","Error","filter","forEach","offerCallback","idx","findIndex","splice","all","map","establishedConn","c","init","Payload","chunkNumber","metadata","value","end","encodeBlob","blob","reader","FileReader","onloadend","e","result","toString","readAsDataURL","RemoteSession","props","useState","filename","setFilename","progress","setProgress","name","size","total","progressState","setProgressState","handleChange","files","a","length","file","useEffect","left","JSON","stringify","log","chunk","slice","state","dialer","dial","sessionId","ready","b64","htmlFor","friendlyName","toFixed","type","className","onChange","target","Presence","sessions","setSessions","ev","some","concat","session","SessionEvent","SessionJoinedEvent","SessionLeftEvent","Signaler","mqtt","mqttPresencePrefix","fetch","connect","password","connectTimeout","clean","resubscribe","clientId","will","retain","payload","qos","topic","on","startsWith","tokens","split","input","parse","descriptionCallback","then","resp","publish","catch","warn","topics","subscribe","v","AuthorizationModal","show","setState","allow","deny","getPeer","onClick","Files","old","chunks","no","complete","sort","b","reduce","acc","cur","download","href","capitalizeFirstLetter","first","rest","locale","navigator","language","toLocaleUpperCase","join","pick","array","Math","floor","random","Array","adjectives","names","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6d8455a.chunk.js","sourcesContent":["import Signaler, { SessionLeftEvent } from \"./signaler\";\n\nexport class MessageReceivedEvent extends Event {\n  constructor(public sender: string, public data: string) {\n    super(\"message_received\");\n  }\n}\n\nexport class AuthorizationRequestedEvent extends Event {\n  constructor(public sender: string, public resolve: Function, public reject: Function) {\n    super(\"authorization_requested\");\n  }\n}\n\nexport class ConnectionEvent extends Event {\n  constructor(kind: string) {\n    super(`connection_${kind}`)\n  }\n}\n\nexport class ConnectionClosedEvent extends ConnectionEvent {\n  constructor() {\n    super('closed');\n  }\n}\nexport class ConnectionReadyEvent extends ConnectionEvent {\n  constructor() {\n    super('ready');\n  }\n}\n\n\nexport class Conn extends EventTarget {\n  private conn: RTCPeerConnection;\n  private chan: RTCDataChannel;\n  constructor(private signaler: Signaler, private id: string, private remoteId: string) {\n    super();\n    this.signaler = signaler;\n    this.id = id;\n    this.remoteId = remoteId;\n    const defaults = {\n      config: {\n        iceServers: [\n          { urls: \"stun:stun.l.google.com:19302\" },\n          {\n            urls: 'turn:turn.anyfirewall.com',\n            credential: 'webrtc',\n            username: 'webrtc'\n          },\n        ]\n      },\n      debug: 3,\n    };\n    this.conn = new RTCPeerConnection(defaults.config);\n    this.conn.ondatachannel = (event) => {\n      event.channel.onerror = (err) => {\n        console.error(err)\n        this.dispatchEvent(new ConnectionClosedEvent())\n      }\n      event.channel.onclose = (err) => {\n        this.dispatchEvent(new ConnectionClosedEvent())\n      }\n      event.channel.onopen = () => {\n        this.dispatchEvent(new ConnectionReadyEvent())\n      };\n      event.channel.onmessage = (msg) => {\n        this.dispatchEvent(new MessageReceivedEvent(this.remoteId, msg.data));\n      };\n    };\n    this.conn.onicecandidate = (event) => {\n      if (event.candidate) {\n        this.signaler.signalCandidate(this.remoteId, event.candidate);\n      }\n    };\n    this.chan = this.conn.createDataChannel(`io.pushr.channels.send.${id}-${remoteId}`);\n\n  }\n  async init() {\n    const desc = await this.conn.createOffer();\n    this.conn.setLocalDescription(desc);\n    console.debug(this.remoteId, 'sending description')\n    return this.signaler.sendDescription(this.remoteId, desc);\n  }\n  close() {\n    this.chan.close();\n  }\n  async ready(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.chan.readyState === \"open\") {\n        resolve();\n        return\n      }\n      let success: EventListener, failure: EventListener;\n\n      success = () => { this.removeEventListener('connection_closed', failure); resolve() };\n      failure = () => { this.removeEventListener('connection_ready', success); reject() };\n\n      console.debug('waiting for conn to be ready. current state is', this.chan.readyState)\n      this.addEventListener('connection_ready', success, { once: true });\n      this.addEventListener('connection_closed', failure, { once: true });\n\n    });\n  }\n  async addIceCandidate(candidate: RTCIceCandidate | RTCIceCandidateInit) {\n    if (candidate !== null) {\n      console.debug(this.remoteId, 'received ice candidate', candidate)\n      try {\n        await this.conn.addIceCandidate(candidate);\n      } catch (err) {\n        console.error(\"failed to add remote ICE candidate:\", err)\n      }\n    }\n  }\n  async informOffer(desc: RTCSessionDescriptionInit) {\n    console.debug(this.remoteId, 'received remote description', desc)\n    this.conn.setRemoteDescription(desc);\n    const answer = await this.conn.createAnswer();\n    this.conn.setLocalDescription(answer);\n    console.debug(this.remoteId, 'description exchange complete')\n    return answer;\n  }\n  offerCallback(desc: RTCSessionDescriptionInit) {\n    this.conn.setRemoteDescription(desc);\n    console.debug(this.remoteId, 'description exchange complete')\n  }\n  send(message: string) {\n    return this.chan.send(message);\n  }\n}\n\ninterface establishedConn {\n  to: string;\n  from: string;\n  conn: Conn;\n}\n\nexport class Dialer extends EventTarget {\n  private registered = false;\n  private conns: establishedConn[];\n\n  constructor(private signaler: Signaler, private id: string) {\n    super();\n    this.signaler = signaler;\n    this.conns = [];\n    this.id = id;\n  }\n  register() {\n    this.signaler.register(this);\n    this.signaler.addEventListener('session_left', ((event: SessionLeftEvent) => {\n      this.removeConn(event.id);\n    }) as EventListener)\n    this.registered = true;\n  }\n  async confirmOffer(from: string, desc: RTCSessionDescriptionInit) {\n    const conn = new Conn(this.signaler, this.id, from);\n    conn.addEventListener('connection_closed', (() => {\n      this.removeConn(from);\n    }) as EventListener);\n\n    conn.addEventListener(\"message_received\", ((event: MessageReceivedEvent) => {\n      this.dispatchEvent(new MessageReceivedEvent(event.sender, event.data))\n    }) as EventListener);\n\n    this.conns.push({ from: from, to: this.id, conn: conn });\n    return conn.informOffer(desc);\n  }\n  async informOffer(from: string, desc: RTCSessionDescriptionInit) {\n    let establishedConn = this.conns.find(elt => elt.from === from);\n    if (establishedConn !== undefined) { return }\n    try {\n      await new Promise((resolve, reject) => {\n        this.dispatchEvent(new AuthorizationRequestedEvent(from, resolve, reject));\n      })\n      return this.confirmOffer(from, desc);\n    } catch {\n      throw new Error('permission denied')\n    }\n  }\n  descriptionCallback(from: string, desc: RTCSessionDescriptionInit) {\n    this.conns\n      .filter((elt) => elt.to === from)\n      .forEach((elt) => {\n        elt.conn.offerCallback(desc);\n      });\n  }\n  removeConn(to: string) {\n    let idx = this.conns.findIndex(elt => elt.to === to);\n    if (idx < 0) { return }\n    this.conns[idx].conn.close();\n    this.conns.splice(idx, 1);\n\n    idx = this.conns.findIndex(elt => elt.from === to);\n    if (idx < 0) { return }\n    this.conns[idx].conn.close();\n    this.conns.splice(idx, 1);\n\n    console.debug(`removed connection to ${to}`)\n  }\n  async addIceCandidate(from: string, candidate: RTCIceCandidate | RTCIceCandidateInit) {\n    return Promise.all(this.conns\n      .filter((elt) => elt.to === from)\n      .map(elt => elt.conn.addIceCandidate(candidate)));\n  }\n  async dial(remoteId: string) {\n    if (!this.registered) {\n      throw new Error(\"dialer not registered\")\n    }\n    let establishedConn = this.conns.find(elt => elt.to === remoteId);\n    if (establishedConn !== undefined) { return establishedConn.conn }\n    console.debug('conn to', remoteId, 'not found: dialing a new one')\n    const c = new Conn(this.signaler, this.id, remoteId);\n    this.conns.push({ from: this.id, to: remoteId, conn: c });\n    c.addEventListener('connection_closed', (() => {\n      this.removeConn(remoteId);\n    }) as EventListener);\n    await c.init();\n    console.debug(remoteId, 'conn init done')\n    return c;\n  }\n}\n","export class Payload {\n  constructor(\n    public chunkNumber: number,\n    public metadata: Metadata,\n    public value: string,\n    public end: boolean,\n  ) { }\n}\n\nexport interface Metadata {\n  name: string;\n  size: number;\n}\n","import { useEffect, useState } from \"react\";\nimport { Conn, Dialer } from \"./dialer\";\nimport { Metadata, Payload } from \"./types\";\n\nexport interface RemoteSessionProps {\n  sessionId: string;\n  friendlyName: string;\n  dialer: Dialer;\n}\n\ninterface progressState {\n  conn?: Conn;\n  value: string;\n  metadata: Metadata;\n  chunkNumber: number;\n  total: number;\n}\n\nconst percentage = (total: number, left: number): number =>\n  (((total - left) / total) * 100);\n\nconst encodeBlob = (blob: Blob): Promise<string> => {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onloadend = function (e) {\n      if (reader.result) {\n        resolve(reader.result.toString());\n      }\n    };\n    reader.readAsDataURL(blob);\n  });\n};\n\nconst chunkSize = 1000;\n\nexport const RemoteSession = (props: RemoteSessionProps) => {\n  const [filename, setFilename] = useState<string>(\"\");\n  const [progress, setProgress] = useState(0);\n  const [progressState, setProgressState] = useState<progressState>({\n    chunkNumber: 0,\n    conn: undefined,\n    metadata: { name: \"\", size: 0 },\n    total: 0,\n    value: \"\",\n  });\n\n  const handleSubmit = (e: React.ChangeEvent<HTMLInputElement>) => {\n    handleChange(e.target.files);\n  };\n  const handleChange = async (files: FileList | null) => {\n    if (files === null || files.length === 0) {\n      setFilename(\"\");\n      setProgress(0);\n      return;\n    }\n    const file = files[0];\n    setFilename(file.name);\n    await send({ name: file.name, size: file.size }, file);\n  };\n\n  useEffect(() => {\n    if (!progressState.conn){ return }\n    setProgress(percentage(progressState.total, progressState.value.length));\n    if (progressState.value.length === 0) {\n      progressState.conn.send(\n        JSON.stringify(\n          new Payload(\n            progressState.chunkNumber,\n            progressState.metadata,\n            \"\",\n            true\n          )\n        )\n      );\n      console.log(\"send complete\");\n      return;\n    }\n    const chunk = progressState.value.slice(0, chunkSize);\n    progressState.conn.send(\n      JSON.stringify(\n        new Payload(\n          progressState.chunkNumber,\n          progressState.metadata,\n          chunk,\n          false\n        )\n      )\n    );\n    setProgressState((state) => ({\n      chunkNumber: state.chunkNumber + 1,\n      conn: state.conn,\n      metadata: state.metadata,\n      value: state.value.slice(chunk.length),\n      total: state.total,\n    }));\n  }, [progressState]);\n\n  const send = async (metadata: Metadata, data: Blob) => {\n    const conn = await props.dialer.dial(props.sessionId);\n    await conn.ready();\n    const b64 = await encodeBlob(data);\n    setProgressState({\n      chunkNumber: 0,\n      conn: conn,\n      metadata: metadata,\n      value: b64,\n      total: b64.length,\n    });\n  };\n\n  return (\n    <label htmlFor={props.sessionId}>\n      <div>{props.friendlyName}</div>\n      {filename !== \"\" ? (\n        <div>\n          {filename} ({progress.toFixed(2)}%)\n        </div>\n      ) : null}\n      <input\n        type=\"file\"\n        className=\"remote-session-input\"\n        id={props.sessionId}\n        onChange={handleSubmit}\n      />\n    </label>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Dialer } from \"./dialer\";\nimport { RemoteSession } from \"./RemoteSession\";\nimport Signaler, { SessionJoinedEvent, SessionLeftEvent } from \"./signaler\";\n\nexport interface PresenceProps {\n  id: string;\n  friendlyName: string;\n  dialer: Dialer;\n  signaler: Signaler;\n}\ninterface session {\n  id: string;\n  friendlyName: string;\n}\nexport const Presence = (props: PresenceProps) => {\n  const [sessions, setSessions] = useState<session[]>([]);\n  useEffect(() => {\n    props.signaler.addEventListener(\"session_joined\", ((\n      ev: SessionJoinedEvent\n    ) => {\n      console.debug(\"session\", ev.id, \"joined\");\n      setSessions((sessions) => {\n        if (!sessions.some((elt) => elt.id === ev.id)) {\n          return sessions.concat({ id: ev.id, friendlyName: ev.friendlyName });\n        }\n        return sessions;\n      });\n    }) as EventListener);\n\n    props.signaler.addEventListener(\"session_left\", ((ev: SessionLeftEvent) => {\n      console.debug(\"session\", ev.id, \"left\");\n      setSessions((sessions) => sessions.filter((elt) => elt.id !== ev.id));\n    }) as EventListener);\n  }, [props]);\n\n  return (\n    <div className=\"presence\">\n      {sessions\n        .filter((session) => session.id !== props.id)\n        .map((session) => (\n          <RemoteSession\n            key={session.id}\n            dialer={props.dialer}\n            sessionId={session.id}\n            friendlyName={session.friendlyName}\n          />\n        ))}\n    </div>\n  );\n};\n","import mqtt from \"mqtt\";\n\nconst qosLevel = 2;\n\nexport class SessionEvent extends Event {\n  id: string;\n  constructor(kind: string, id: string) {\n    super(`session_${kind}`);\n    this.id = id;\n  }\n}\n\nexport class SessionJoinedEvent extends SessionEvent {\n  friendlyName: string;\n  constructor(id: string, friendlyName: string) {\n    super(\"joined\", id);\n    this.friendlyName = friendlyName;\n  }\n}\nexport class SessionLeftEvent extends SessionEvent {\n  constructor(id: string) {\n    super(\"left\", id);\n  }\n}\n\ninterface session {\n  id: string;\n  name: string;\n}\nexport default class Signaler extends EventTarget {\n  private dialer: any;\n  private mqtt: mqtt.MqttClient;\n  private sessions: session[] = [];\n\n  close() {\n    this.mqtt.end(true);\n  }\n  getPeer(id: string): session {\n    const v = this.sessions.find(elt => elt.id === id)\n    if (v === undefined) { return { id: id, name: ' Unknown' } }\n    return v;\n  }\n  constructor(private id: string, private name: string) {\n    super();\n    const mqttPresencePrefix = `sessions/`;\n    // chrome refuses to connect without this, I do not understand why.\n    try { fetch(\"https://broker.iot.cloud.vx-labs.net/mqtt\") } catch { }\n    this.mqtt = mqtt.connect(\"wss://broker.iot.cloud.vx-labs.net/mqtt\", {\n      username: \"julien@bonachera.fr/pushr/browser\",\n      password: \"VeryPasswordMuchSecureWow\",\n      connectTimeout: 30 * 1000,\n      clean: true,\n      resubscribe: false,\n      clientId: `pushr_${id}`,\n      will: {\n        retain: true,\n        payload: '',\n        qos: qosLevel,\n        topic: `sessions/${this.id}`,\n      },\n    });\n    this.mqtt.on(\"message\", (topic, payload) => {\n      //console.debug(`${topic} -> ${payload.toString()}`);\n      if (topic.startsWith(mqttPresencePrefix)) {\n        topic = topic.slice(mqttPresencePrefix.length);\n        const tokens = topic.split(\"/\");\n        if (tokens.length === 1) {\n          const sessionId = tokens[0];\n          if (payload.length === 0) {\n            if (this.sessions.some(elt => elt.id === sessionId)) {\n              this.sessions = this.sessions.filter(elt => elt.id !== sessionId)\n            }\n            this.dispatchEvent(new SessionLeftEvent(sessionId));\n          } else {\n            const input = JSON.parse(payload.toString())\n            if (!this.sessions.some(elt => elt.id === sessionId)) {\n              this.sessions.push({ id: sessionId, name: input.name })\n            }\n            this.dispatchEvent(new SessionJoinedEvent(sessionId, input.name));\n          }\n        } else if (topic.startsWith(this.id)) {\n          // RPC\n          if (this.dialer === undefined) {\n            console.error('dropped packet: dialer not registered')\n            return;\n          }\n          topic = topic.slice(this.id.length + 1);\n          switch (topic) {\n            case \"candidate\":\n              {\n                const msg = JSON.parse(payload.toString());\n                this.dialer.addIceCandidate(msg.from, msg.candidate);\n              }\n              break;\n            case \"description_denied\":\n              {\n                const msg = JSON.parse(payload.toString());\n                this.dialer.removeConn(msg.from);\n              }\n              break;\n            case \"description_answer\":\n              {\n                const msg = JSON.parse(payload.toString());\n                this.dialer.descriptionCallback(msg.from, msg.desc);\n              }\n              break;\n            case \"description\":\n              {\n                const msg = JSON.parse(payload.toString());\n                this.dialer\n                  .informOffer(msg.from, msg.desc)\n                  .then((resp: any) => {\n                    this.mqtt.publish(\n                      `sessions/${msg.from}/description_answer`,\n                      JSON.stringify({ from: this.id, desc: resp }),\n                      { qos: qosLevel }\n                    );\n                  })\n                  .catch(() => {\n                    this.mqtt.publish(\n                      `sessions/${msg.from}/description_denied`,\n                      JSON.stringify({ from: this.id, }),\n                      { qos: qosLevel }\n                    );\n                  });\n              }\n              break;\n            default:\n              console.warn(\"unknown rpc received:\", topic);\n          }\n        }\n      }\n    });\n    this.mqtt.on(\"connect\", async () => {\n      const topics = [\n        `sessions/${this.id}/+`,\n        `sessions/+`\n      ]\n\n      this.mqtt.subscribe(topics, { qos: qosLevel }, (err) => {\n        if (err) {\n          console.error(\"presence setup failed\", err)\n          return\n        }\n        console.log('presence setup')\n        this.mqtt.publish(`sessions/${this.id}`, JSON.stringify({ id: this.id, name: this.name }), {\n          qos: qosLevel,\n          retain: true,\n        }, (err) => {\n          if (err) {\n            console.error(err)\n          }\n        });\n      });\n      console.debug('connection to mqtt broker established')\n    });\n  }\n\n  register(dialer: any) {\n    this.dialer = dialer;\n  }\n\n  async signalCandidate(to: string, candidate: any): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.mqtt.publish(\n        `sessions/${to}/candidate`,\n        JSON.stringify({\n          candidate,\n          from: this.id,\n        }),\n        { qos: qosLevel },\n        (err) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        }\n      );\n    });\n  }\n  async sendDescription(to: string, desc: any): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.mqtt.publish(\n        `sessions/${to}/description`,\n        JSON.stringify({ from: this.id, desc: desc }),\n        { qos: qosLevel },\n        (err) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        }\n      );\n    });\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport { AuthorizationRequestedEvent, Dialer } from \"./dialer\";\nimport Signaler from \"./signaler\";\n\nexport interface AuthorizationModalProps {\n  dialer: Dialer;\n  signaler: Signaler;\n}\ninterface state {\n  show: Boolean;\n  from?: string;\n  allow?: () => void;\n  deny?: () => void;\n}\n\nexport const AuthorizationModal = (props: AuthorizationModalProps) => {\n  const [state, setState] = useState<state>({ show: false });\n\n  useEffect(() => {\n    props.dialer.addEventListener(\"authorization_requested\", ((\n      ev: AuthorizationRequestedEvent\n    ) => {\n      console.log(`${ev.sender} requested authorization`);\n      setState(() => ({\n        show: true,\n        allow: () => {\n          setState({ show: false });\n          ev.resolve();\n        },\n        deny: () => {\n          setState({ show: false });\n          ev.reject();\n        },\n        from: props.signaler.getPeer(ev.sender).name,\n      }));\n    }) as EventListener);\n  }, [props]);\n\n  return !state.show ? null : (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <div>{state.from} requested authorization.</div>\n        <div>\n          <button onClick={state.allow}>Allow</button>\n          <button onClick={state.deny}>Deny</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Dialer, MessageReceivedEvent } from \"./dialer\";\nimport { Payload } from \"./types\";\n\nexport interface FileProps {\n  dialer: Dialer;\n}\n\ninterface receivedFile {\n  name: string;\n  from: string;\n  size: number;\n  value: string;\n  chunks: { no: number; value: string }[];\n  complete: boolean;\n}\n\nexport const Files = (props: FileProps) => {\n  const [state, setState] = useState<receivedFile[]>([]);\n\n  useEffect(() => {\n    props.dialer.addEventListener(\"message_received\", ((\n      ev: MessageReceivedEvent\n    ) => {\n      try {\n        const payload = JSON.parse(ev.data) as Payload;\n\n        setState((state: receivedFile[]) => {\n          const files = state.slice();\n          const old = files.find(\n            (elt) =>\n              elt.from === ev.sender && elt.name === payload.metadata.name\n          );\n          if (old !== undefined) {\n            if (payload.end) {\n              old.value = old.chunks\n                .sort((a, b) => a.no - b.no)\n                .reduce((acc, cur) => acc + cur.value, \"\");\n              old.complete = true;\n            } else {\n              //console.log(\"appending chunk\", payload.chunkNumber);\n              if (!old.chunks.some((elt) => elt.no === payload.chunkNumber)) {\n                old.chunks = old.chunks.concat({\n                  no: payload.chunkNumber,\n                  value: payload.value,\n                });\n              }\n            }\n          } else {\n            console.log(\"creating chunk\", payload.chunkNumber);\n            return files.concat({\n              from: ev.sender,\n              chunks: [{ no: payload.chunkNumber, value: payload.value }],\n              value: \"\",\n              size: payload.metadata.size,\n              name: payload.metadata.name,\n              complete: false,\n            });\n          }\n          return files;\n        });\n      } catch (err) {\n        console.log(\"failed:\", err);\n      }\n    }) as EventListener);\n  }, [props.dialer]);\n\n  return (\n    <div>\n      Files:{\" \"}\n      {state\n        .filter((elt) => elt.complete)\n        .map((elt) => (\n          <a download={elt.name} href={elt.value} key={elt.from + elt.name}>\n            {elt.name}\n          </a>\n        ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport names from \"./assets/names.json\";\nimport adjectives from \"./assets/adjectives.json\";\nimport { Dialer } from \"./dialer\";\nimport { Presence } from \"./Presence\";\nimport Signaler from \"./signaler\";\nimport { AuthorizationModal } from \"./AuthorizationModal\";\nimport { Files } from \"./Files\";\n\n\nconst getID = (): string => {\n  return [...Array(8)]\n    .map(() => (~~(Math.random() * 36)).toString(36))\n    .join(\"\");\n};\n\n\nconst capitalizeFirstLetter = (\n  [first, ...rest]: string,\n  locale = navigator.language\n) => {\n  return [first.toLocaleUpperCase(locale), ...rest].join(\"\");\n};\n\nconst pick = (array: string[]): string => {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\nconst getName = (): string => {\n  return `${capitalizeFirstLetter(pick(adjectives))} ${capitalizeFirstLetter(\n    pick(names)\n  )}`;\n};\n\nconst id = getID();\nconst name = getName();\n\nconst signaler = new Signaler(id, name);\n\nconst dialer = new Dialer(signaler, id);\ndialer.register();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AuthorizationModal\n        signaler={signaler}\n        dialer={dialer}\n      ></AuthorizationModal>\n      <div className=\"peers\">\n        <Presence\n          dialer={dialer}\n          friendlyName={name}\n          signaler={signaler}\n          id={id}\n        />\n      </div>\n      <div className=\"self\">\n        <div>I am {name}</div>\n        <Files dialer={dialer}></Files>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}